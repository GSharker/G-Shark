name: Create release

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  PROJECT_PATH: 'src/GShark/GShark.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}/output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'

on:
  push:
    branches:
      - master
  pull_request:
    types: [closed]
  pull_request_target:
    types: [closed]

jobs:
  build:
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:          
      - name: ðŸ›Ž Checkout repo
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0
          
      - name: ðŸ‘¶ Draft release
        id: release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸš§ Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      
      - name: ðŸ“– Read release
        run: echo ${{ steps.release.outputs.tag_name }}
      
      - name: ðŸ”§ Restore nuget with dotnet
        run: dotnet restore ${{ env.PROJECT_PATH }}
      
      - name: ðŸ§± Build project
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release -p:Version=${{ steps.release.outputs.tag_name }}
        
      - name: ðŸ“¦ Create the package
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release -p:PackageVersion=${{ steps.release.outputs.tag_name }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
        
      - name: ðŸš€ Publish the package
        run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}/*.nupkg --skip-duplicate -k ${{ secrets.NUGET_API_KEY }} -s ${{ env.NUGET_SOURCE_URL }}
  
      - name: ðŸ“° Publish release
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.release.outputs.id }}
